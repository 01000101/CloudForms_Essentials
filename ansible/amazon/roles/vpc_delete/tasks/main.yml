---
- name: Get Service Information
  uri: 
    url: "{{ manageiq.api_url }}/api/{{ manageiq.service }}"
    method: GET
    body_format: json
    validate_certs: False
    headers:
      X-Auth-Token: "{{ manageiq.api_token }}"
      Content-Type: "application/json"
    status_code: 200
  register: service_output
  when: manageiq is defined

- name: Print service_output
  debug: 
    var: service_output
  when: verbose and manageiq is defined

- name: Set vpc_name From Service Description
  set_fact: 
    vpc_name: "{{ service_output.json.description }}"

- name: Print vpc_name
  debug: 
    var: vpc_name
  when: verbose and manageiq is defined

- name: Get VPC Facts
  ec2_vpc_net_facts:
    region: "{{ region }}"
    filters:
      "tag:Name": "{{ vpc_name }}"
  register: vpc_facts

- name: Print vpc_facts
  debug: 
    var: vpc_facts
  when: verbose

- name: Get Security Group Facts
  ec2_group_facts:
    region: "{{ region }}"
    filters:
      vpc-id: "{{ vpc_facts.vpcs[0].id }}"
  register: sgs_facts

- name: Print sgs_facts
  debug: 
    var: sgs_facts
  when: verbose

- name: Print sgs_facts.security_groups
  debug: 
    var: item
  with_items: sgs_facts.security_groups
  when: verbose

- name: Delete Security Group
  ec2_group:
    group_id: "{{ item.group_id }}"
    state: absent
  with_items: sgs_facts.security_groups[0]

- name: Get Route Table Facts
  ec2_vpc_route_table_facts:
    region: "{{ region }}"
    filters:
      vpc-id: "{{ vpc_facts.vpcs[0].id }}"
  register: routes

- name: Print routes
  debug: 
    var: routes
  when: verbose

- name: Delete Route Table
  ec2_vpc_route_table:
    state: absent
    route_table_id: "{{ item.route_table_id }}"
    vpc_id: "{{ vpc_net.vpcs[0].id }}"
    region: "{{ region }}"
  with_items: routes

- name: Delete Internet Gateway
  ec2_vpc_igw:
    vpc_id: "{{ vpc_net.vpcs[0].id }}"
    state: absent
    region: "{{ region }}"
  register: igws

- name: Delete VPC
  ec2_vpc_net:
    region: "{{ region }}"
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_facts.vpcs[0].cidr_block }}"
    state: absent
  register: delete_vpc

- name: Print vpc_facts
  debug: 
    var: delete_vpc
  when: verbose
