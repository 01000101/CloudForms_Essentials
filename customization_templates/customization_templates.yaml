---
- name: amazon_web_server
  description: ''
  script: "#cloud-config\n#\n# amazon_web_server.yaml\n#\n#  Author: Kevin Morey <kevin@redhat.com>\n#\n#
    \ Description: CloudForms - cloud-init script for a RHEL Apache server installation
    on EC2.\n#  \n#  Notes: The evm hash below is the same as $evm.root['miq_provision'].options
    giving you access to all of the \n#     provisioning options\n#\n#  Troubleshooting:
    /var/log/boot.log & /var/log/cloud-init-output.log & /var/lib/cloud/instance/user-data.txt\n#
    -------------------------------------------------------------------------------\n#
    \   Copyright 2016 Kevin Morey <kevin@redhat.com>\n#\n#    Licensed under the
    Apache License, Version 2.0 (the \"License\");\n#    you may not use this file
    except in compliance with the License.\n#    You may obtain a copy of the License
    at\n#\n#        http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required
    by applicable law or agreed to in writing, software\n#    distributed under the
    License is distributed on an \"AS IS\" BASIS,\n#    WITHOUT WARRANTIES OR CONDITIONS
    OF ANY KIND, either express or implied.\n#    See the License for the specific
    language governing permissions and\n#    limitations under the License.\n# -------------------------------------------------------------------------------\n<%\n
    \ # set variables using the evm hash\n  ws_values             = evm.fetch(:ws_values,
    {})\n  role                  = evm[:role] || ws_values[:role] || 'web'\n  instance_name
    \        = evm[:vm_target_name]\n  key_pair              = evm[:keypair] || ws_values[:keypair]\n
    \ default_key_pair      = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC620IifcECE8MwBVah8MJZ5oz5dvIgGtQuuIgiPDyRKtEhSrLzD+jCZLNczW3vnmIvMiVppQVAW+t8YMehLV7vWwtbXM1QTzK6/dRhUnL46smpPqayrxCKAm+PhClYw6OY43rYxbnI+R+MKDhx/Ckm98/92iPWNaN9Ucsg8gumr3t9gyYrr3E/qrtg2SGSRtuxHeUS+KClVY4ZGaTEq//Z1PIDkT0tdTAc1PMeZU965mmfTomgIh6MN3i7Nt3zUV6sdqsaMLIEPH57WCEfOgVG86Zi50jN3J7oUySXQw+BuwlVgUjNQWGIxIuLK6Yr64X9liM2+yW+F4kzWj6wuBSv
    SALAB\"\n%>\n\nbootcmd:\n  ## turn off SELinux\n  - setenforce 0\n\nssh_authorized_keys:\n
    \ <% unless default_key_pair.blank? %>\n  - <%=default_key_pair%>\n  <% end %>\n
    \ <% unless key_pair.blank? %>\n  - <%=key_pair%>\n  <% end %>\n\noutput: {all:
    '| tee -a /var/log/cloud-init-output.log'}\n\nruncmd:\n  ## setup motd\n  - echo
    Welcome to Red Hat CloudForms <%=role%> Instance <%=instance_name%> > /etc/motd\n\n
    \ ## turn off firewall\n  - echo CloudForms Turning off firewall\n  - chkconfig
    iptables off  \n  - service iptables stop\n\n  ## Install Apache\n  - echo CloudForms
    installing apache\n  - yum -y install httpd wget\n  - service httpd start\n  -
    chkconfig httpd on\n\n  ## Modify default apache homepage\n  - echo CloudForms
    Modifyig default apache homepage\n  - sed -i 's/<h1>Red Hat Enterprise Linux/<h1>Welcome
    to Red Hat CloudForms <%=role.titlecase%> Instance <%=instance_name%>/' /var/www/error/noindex.html\n\n
    \ ## update system\n  - echo CloudForms performing yum update\n  - yum update
    -y"
  pxe_image_type_id: 5
  type: CustomizationTemplateCloudInit
  system: 
- name: amazon_server
  description: ''
  script: "#cloud-config\n#\n# amazon_server.yaml\n#\n#  Author: Kevin Morey <kevin@redhat.com>\n#\n#
    \ Description: CloudForms - cloud-init script for a RHEL server installation on
    EC2.\n#  \n#  Notes: The evm hash below is the same as $evm.root['miq_provision'].options
    giving you access to all of the \n#     provisioning options\n#\n#  Troubleshooting:
    /var/log/boot.log & /var/log/cloud-init-output.log & /var/lib/cloud/instance/user-data.txt\n#
    -------------------------------------------------------------------------------\n#
    \   Copyright 2016 Kevin Morey <kevin@redhat.com>\n#\n#    Licensed under the
    Apache License, Version 2.0 (the \"License\");\n#    you may not use this file
    except in compliance with the License.\n#    You may obtain a copy of the License
    at\n#\n#        http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required
    by applicable law or agreed to in writing, software\n#    distributed under the
    License is distributed on an \"AS IS\" BASIS,\n#    WITHOUT WARRANTIES OR CONDITIONS
    OF ANY KIND, either express or implied.\n#    See the License for the specific
    language governing permissions and\n#    limitations under the License.\n# -------------------------------------------------------------------------------\n<%\n
    \ # set variables\n  ws_values             = evm.fetch(:ws_values, {})\n  role
    \                 = evm[:role] || ws_values[:role] || 'server'\n  instance_name
    \        = evm[:vm_target_name]\n  key_pair              = evm[:keypair] || ws_values[:keypair]\n
    \ default_key_pair      = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC620IifcECE8MwBVah8MJZ5oz5dvIgGtQuuIgiPDyRKtEhSrLzD+jCZLNczW3vnmIvMiVppQVAW+t8YMehLV7vWwtbXM1QTzK6/dRhUnL46smpPqayrxCKAm+PhClYw6OY43rYxbnI+R+MKDhx/Ckm98/92iPWNaN9Ucsg8gumr3t9gyYrr3E/qrtg2SGSRtuxHeUS+KClVY4ZGaTEq//Z1PIDkT0tdTAc1PMeZU965mmfTomgIh6MN3i7Nt3zUV6sdqsaMLIEPH57WCEfOgVG86Zi50jN3J7oUySXQw+BuwlVgUjNQWGIxIuLK6Yr64X9liM2+yW+F4kzWj6wuBSv
    SALAB\"\n%>\n\nbootcmd:\n  ## turn off SELinux\n  - setenforce 0\n\nssh_authorized_keys:\n
    \ <% unless default_key_pair.blank? %>\n  - <%=default_key_pair%>\n  <% end %>\n
    \ <% unless key_pair.blank? %>\n  - <%=key_pair%>\n  <% end %>\n\noutput: {all:
    '| tee -a /var/log/cloud-init-output.log'}\n\nruncmd:\n  ## setup motd\n  - echo
    Welcome to Red Hat CloudForms <%=role%> Instance <%=instance_name%> > /etc/motd\n\n
    \ ## turn off firewall\n  - echo CloudForms Turning off firewall\n  - chkconfig
    iptables off  \n  - service iptables stop\n\n  ## update system\n  - echo CloudForms
    performing yum update\n  - yum update -y"
  pxe_image_type_id: 5
  type: CustomizationTemplateCloudInit
  system: 
- name: amazon_database
  description: ''
  script: "#cloud-config\n#\n# amazon_database.yaml\n#\n#  Author: Kevin Morey <kevin@redhat.com>\n#\n#
    \ Description: CloudForms - cloud-init script for a RHEL MySQL server installation
    on EC2.\n#  \n#  Notes: The evm hash below is the same as $evm.root['miq_provision'].options
    giving you access to all of the \n#     provisioning options\n#\n#  Troubleshooting:
    /var/log/boot.log & /var/log/cloud-init-output.log & /var/lib/cloud/instance/user-data.txt\n#
    -------------------------------------------------------------------------------\n#
    \   Copyright 2016 Kevin Morey <kevin@redhat.com>\n#\n#    Licensed under the
    Apache License, Version 2.0 (the \"License\");\n#    you may not use this file
    except in compliance with the License.\n#    You may obtain a copy of the License
    at\n#\n#        http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required
    by applicable law or agreed to in writing, software\n#    distributed under the
    License is distributed on an \"AS IS\" BASIS,\n#    WITHOUT WARRANTIES OR CONDITIONS
    OF ANY KIND, either express or implied.\n#    See the License for the specific
    language governing permissions and\n#    limitations under the License.\n# -------------------------------------------------------------------------------\n<%\n
    \ # set variables\n  ws_values             = evm.fetch(:ws_values, {})\n  role
    \                 = evm[:role] || ws_values[:role] || 'database'\n  instance_name
    \        = evm[:vm_target_name]\n  key_pair              = evm[:keypair] || ws_values[:keypair]\n
    \ default_key_pair      = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC620IifcECE8MwBVah8MJZ5oz5dvIgGtQuuIgiPDyRKtEhSrLzD+jCZLNczW3vnmIvMiVppQVAW+t8YMehLV7vWwtbXM1QTzK6/dRhUnL46smpPqayrxCKAm+PhClYw6OY43rYxbnI+R+MKDhx/Ckm98/92iPWNaN9Ucsg8gumr3t9gyYrr3E/qrtg2SGSRtuxHeUS+KClVY4ZGaTEq//Z1PIDkT0tdTAc1PMeZU965mmfTomgIh6MN3i7Nt3zUV6sdqsaMLIEPH57WCEfOgVG86Zi50jN3J7oUySXQw+BuwlVgUjNQWGIxIuLK6Yr64X9liM2+yW+F4kzWj6wuBSv
    SALAB\"\n  \n  root_password         = evm[:root_password]     || ws_values[:root_password]
    \     || 'Redhat1!'\n  database_name         = evm[:database_name]     || ws_values[:database_name]
    \     || 'wordpressdb'\n  database_user         = evm[:database_user]     || ws_values[:database_user]
    \     || 'wordpressuser'\n  database_password     = evm[:database_password] ||
    ws_values[:database_password]  || 'wordpresspwd'\n  database_host         = evm[:database_host]
    \    || ws_values[:database_host]      || 'localhost'\n%>\n\nbootcmd:\n  ## turn
    off SELinux\n  - setenforce 0\n\nssh_authorized_keys:\n  <% unless default_key_pair.blank?
    %>\n  - <%=default_key_pair%>\n  <% end %>\n  <% unless key_pair.blank? %>\n  -
    <%=key_pair%>\n  <% end %>\n\noutput: {all: '| tee -a /var/log/cloud-init-output.log'}\n\nruncmd:\n
    \ ## setup motd\n  - echo Welcome to Red Hat CloudForms <%=role%> Instance <%=instance_name%>
    > /etc/motd\n\n  ## turn off firewall\n  - echo CloudForms Turning off firewall\n
    \ - chkconfig iptables off  \n  - service iptables stop\n\n  ## install MYSQL\n
    \ - echo CloudForms Installing mysql\n  - yum install -y mysql mysql-server\n
    \ - echo CloudForms Starting mysql\n  - service mysqld start\n  - chkconfig mysqld
    on\n  \n    ## creating MySQL Database\n  - echo CloudForms Configuring mysql\n
    \ - mysqladmin -u root password <%=root_password%>\n  - echo CloudForms Creating
    MYSQL Database\n  - mysql --user=root --password=<%=root_password%> -e \"CREATE
    DATABASE <%=database_name%>\"\n  - mysql --user=root --password=<%=root_password%>
    -e \"GRANT ALL ON <%=database_name%>.* TO <%=database_user%>@localhost IDENTIFIED
    BY '<%=database_password%>'\"\n  - mysql --user=root --password=<%=root_password%>
    -e \"GRANT ALL ON <%=database_name%>.* TO <%=database_user%>@'%' IDENTIFIED BY
    '<%=database_password%>'\"\n  - mysql --user=root --password=<%=root_password%>
    -e \"FLUSH PRIVILEGES\"\n\n  ## update system\n  - echo CloudForms performing
    yum update\n  - yum update -y"
  pxe_image_type_id: 5
  type: CustomizationTemplateCloudInit
  system: 
- name: amazon_wordpress
  description: ''
  script: "#cloud-config\n#\n# amazon_wordpress.yaml\n#\n#  Author: Kevin Morey <kevin@redhat.com>\n#\n#
    \ Description: CloudForms - cloud-init script for a RHEL WordPress server installation
    on EC2.\n#  \n#  Notes: The evm hash below is the same as $evm.root['miq_provision'].options
    giving you access to all of the \n#     provisioning options\n#\n#  Troubleshooting:
    /var/log/boot.log & /var/log/cloud-init-output.log & /var/lib/cloud/instance/user-data.txt\n#
    -------------------------------------------------------------------------------\n#
    \   Copyright 2016 Kevin Morey <kevin@redhat.com>\n#\n#    Licensed under the
    Apache License, Version 2.0 (the \"License\");\n#    you may not use this file
    except in compliance with the License.\n#    You may obtain a copy of the License
    at\n#\n#        http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required
    by applicable law or agreed to in writing, software\n#    distributed under the
    License is distributed on an \"AS IS\" BASIS,\n#    WITHOUT WARRANTIES OR CONDITIONS
    OF ANY KIND, either express or implied.\n#    See the License for the specific
    language governing permissions and\n#    limitations under the License.\n# -------------------------------------------------------------------------------\n<%\n
    \ # set variables\n  ws_values             = evm.fetch(:ws_values, {})\n  role
    \                 = evm[:role] || ws_values[:role] || 'wordpress'\n  instance_name
    \        = evm[:vm_target_name]\n  key_pair              = evm[:keypair] || ws_values[:keypair]\n
    \ default_key_pair      = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC620IifcECE8MwBVah8MJZ5oz5dvIgGtQuuIgiPDyRKtEhSrLzD+jCZLNczW3vnmIvMiVppQVAW+t8YMehLV7vWwtbXM1QTzK6/dRhUnL46smpPqayrxCKAm+PhClYw6OY43rYxbnI+R+MKDhx/Ckm98/92iPWNaN9Ucsg8gumr3t9gyYrr3E/qrtg2SGSRtuxHeUS+KClVY4ZGaTEq//Z1PIDkT0tdTAc1PMeZU965mmfTomgIh6MN3i7Nt3zUV6sdqsaMLIEPH57WCEfOgVG86Zi50jN3J7oUySXQw+BuwlVgUjNQWGIxIuLK6Yr64X9liM2+yW+F4kzWj6wuBSv
    SALAB\"\n  \n  root_password         = evm[:root_password]     || ws_values[:root_password]
    \     || 'Redhat1!'\n  database_name         = evm[:database_name]     || ws_values[:database_name]
    \     || 'wordpressdb'\n  database_user         = evm[:database_user]     || ws_values[:database_user]
    \     || 'wordpressuser'\n  database_password     = evm[:database_password] ||
    ws_values[:database_password]  || 'wordpresspwd'\n  database_host         = evm[:database_host]
    \    || ws_values[:database_host]      || 'localhost'\n%>\n\nbootcmd:\n  ## turn
    off SELinux\n  - setenforce 0\n\nssh_authorized_keys:\n  <% unless default_key_pair.blank?
    %>\n  - <%=default_key_pair%>\n  <% end %>\n  <% unless key_pair.blank? %>\n  -
    <%=key_pair%>\n  <% end %>\n\noutput: {all: '| tee -a /var/log/cloud-init-output.log'}\n\nruncmd:\n
    \ ## setup motd\n  - echo Welcome to Red Hat CloudForms <%=role%> Instance <%=instance_name%>
    > /etc/motd\n\n  ## turn off firewall\n  - echo CloudForms Turning off firewall\n
    \ - chkconfig iptables off  \n  - service iptables stop\n\n  ## install MYSQL\n
    \ - echo CloudForms Installing mysql\n  - yum install -y mysql mysql-server\n\n
    \ - echo CloudForms Starting mysql\n  - service mysqld start\n  - chkconfig mysqld
    on\n  \n  ## setting up MySQL root password\n  - echo CloudForms Configuring mysql\n
    \ - mysqladmin -u root password <%=root_password%>\n\n  ## creating MySQL Database\n
    \ - echo CloudForms Creating MYSQL Database\n  - mysql --user=root --password=<%=root_password%>
    -e \"CREATE DATABASE <%=database_name%>\"\n  - mysql --user=root --password=<%=root_password%>
    -e \"GRANT ALL ON <%=database_name%>.* TO <%=database_user%>@localhost IDENTIFIED
    BY '<%=database_password%>'\"\n  - mysql --user=root --password=<%=root_password%>
    -e \"GRANT ALL ON <%=database_name%>.* TO <%=database_user%>@'%' IDENTIFIED BY
    '<%=database_password%>'\"\n  - mysql --user=root --password=<%=root_password%>
    -e \"FLUSH PRIVILEGES\"\n\n  ## install Apache\n  - echo CloudForms Installing
    apache\n  - yum -y install httpd wget\n  - service httpd start\n  - chkconfig
    httpd on\n\n  ## modify default apache homepage\n  - echo CloudForms Modifyig
    default apache homepage\n  - sed -i 's/<h1>Red Hat Enterprise Linux/<h1>Welcome
    to Red Hat CloudForms <%=role%> Instance <%=instance_name%>/' /var/www/error/noindex.html\n\n
    \ ## install PHP\n  - echo CloudForms Installing PHP\n  - yum -y install php php-mysql\n\n
    \ ## Install Wordpress\n  - echo CloudForms Installing WordPress\n  - [wget, \"http://wordpress.org/latest.tar.gz\",
    -O, /tmp/latest.tar.gz]\n  - tar xzf /tmp/latest.tar.gz -C /var/www/html\n  -
    cp /var/www/html/wordpress/wp-config-sample.php /var/www/html/wordpress/wp-config.php\n\n
    \   ## Configure Wordpress\n  - echo CloudForms Configuring WordPress\n  - sed
    -i 's/database_name_here/<%=database_name%>/g' /var/www/html/wordpress/wp-config.php\n
    \ - sed -i 's/username_here/<%=database_user%>/g' /var/www/html/wordpress/wp-config.php\n
    \ - sed -i 's/password_here/<%=database_password%>/g' /var/www/html/wordpress/wp-config.php\n
    \ - sed -i 's/Welcome/Welcome to Red Hat CloudForms <%=role%> Instance <%=instance_name%>/'
    /var/www/html/wordpress/wp-admin/install.php\n  - sed -i 's/localhost/<%=database_host%>/g'
    /var/www/html/wordpress/wp-config.php\n\n    ## Update /etc/hosts\n  - echo CloudForms
    Updating /etc/hosts\n    <% if database_host == 'localhost' %>\n  - sed -i '/^127.0/
    s/$/ database_host/' /etc/hosts\n    <% else %>\n  - echo <%=database_host%>  database_host
    >> /etc/hosts\n    <% end %>\n\n  ## Install apache\n  - echo CloudForms Restarting
    apache\n  - service httpd restart\n\n  ## update system\n  - echo CloudForms performing
    yum update\n  - yum update -y"
  pxe_image_type_id: 5
  type: CustomizationTemplateCloudInit
  system: 
- name: rhev_server
  description: rhev_server
  script: "#cloud-config\n#\n# rhev_server.yaml\n#\n#  Author: Kevin Morey <kevin@redhat.com>\n#\n#
    \ Description: CloudForms - cloud-init script for a RHEL server installation on
    RHEV.\n#  \n#  Notes: The evm hash below is the same as $evm.root['miq_provision'].options
    giving you access to all of the \n#     provisioning options\n#\n#  Troubleshooting:
    /var/log/boot.log & /var/log/cloud-init-output.log & /var/lib/cloud/instance/user-data.txt\n#
    -------------------------------------------------------------------------------\n#
    \   Copyright 2016 Kevin Morey <kevin@redhat.com>\n#\n#    Licensed under the
    Apache License, Version 2.0 (the \"License\");\n#    you may not use this file
    except in compliance with the License.\n#    You may obtain a copy of the License
    at\n#\n#        http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required
    by applicable law or agreed to in writing, software\n#    distributed under the
    License is distributed on an \"AS IS\" BASIS,\n#    WITHOUT WARRANTIES OR CONDITIONS
    OF ANY KIND, either express or implied.\n#    See the License for the specific
    language governing permissions and\n#    limitations under the License.\n# -------------------------------------------------------------------------------\n<%\n
    \ # set variables\n  ws_values             = evm.fetch(:ws_values, {})\n  role
    \                 = evm[:role] || ws_values[:role] || 'server'\n  instance_name
    \        = evm[:vm_target_name]\n  key_pair              = evm[:keypair] || ws_values[:keypair]\n
    \ default_key_pair      = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC620IifcECE8MwBVah8MJZ5oz5dvIgGtQuuIgiPDyRKtEhSrLzD+jCZLNczW3vnmIvMiVppQVAW+t8YMehLV7vWwtbXM1QTzK6/dRhUnL46smpPqayrxCKAm+PhClYw6OY43rYxbnI+R+MKDhx/Ckm98/92iPWNaN9Ucsg8gumr3t9gyYrr3E/qrtg2SGSRtuxHeUS+KClVY4ZGaTEq//Z1PIDkT0tdTAc1PMeZU965mmfTomgIh6MN3i7Nt3zUV6sdqsaMLIEPH57WCEfOgVG86Zi50jN3J7oUySXQw+BuwlVgUjNQWGIxIuLK6Yr64X9liM2+yW+F4kzWj6wuBSv
    SALAB\"\n%>\n\nbootcmd:\n  ## turn off SELinux\n  - setenforce 0\n\nssh_authorized_keys:\n
    \ <% unless default_key_pair.blank? %>\n  - <%=default_key_pair%>\n  <% end %>\n
    \ <% unless key_pair.blank? %>\n  - <%=key_pair%>\n  <% end %>\n\noutput: {all:
    '| tee -a /var/log/cloud-init-output.log'}\n\nruncmd:\n  ## setup motd\n  - echo
    Welcome to Red Hat CloudForms <%=role%> Instance <%=instance_name%> > /etc/motd\n\n
    \ ## turn off firewall\n  - echo CloudForms Turning off firewall\n  - chkconfig
    iptables off  \n  - service iptables stop\n\n  ## update system\n  - echo CloudForms
    performing yum update\n  - yum update -y"
  pxe_image_type_id: 8
  type: CustomizationTemplateCloudInit
  system: 
- name: rhel6_template_pxe
  description: ''
  script: "<%\n  # Setting Variables\n  debug                   = false\n  rhel_version\t\t
    \     = evm[:rhel_version]\n  rhel_version\t\t\t  ||= evm[:ws_values][:rhel_version]
    rescue '6.5'\n  os_ver                  = \"RHEL #{rhel_version} Server\"\n  rhn_activation_key\t
    \ = evm[:activation_key]\n  rhn_activation_key      ||= evm[:ws_values][:activation_key]
    rescue '2-demo-org-key'\n  repo_source_url         = \"http://satellite.rdu.salab.redhat.com/ks/dist/ks-rhel-x86_64-server-6-\"+rhel_version\n
    \ satellite_script        = \"http://10.11.164.2/pub/cfme/demo.sh\"\n  rhev_agent_url
    \         = \"http://satellite.rdu.salab.redhat.com/pub/cfme/ipxe/sources/misc/rhev-agent-2.3.16-3.el6.x86_64.rpm\"\n
    \ root_fallback_password  = \"Redhat1!\" # Fallback root password if the dialog
    was blank\n  \n  # Account for some missing values\n  evm[:root_password]  = root_fallback_password
    if evm[:root_password].blank?\n  evm[:hostname]       = evm[:vm_target_hostname]
    if evm[:hostname].blank?\n  evm[:addr_mode]      = ['dhcp'] if evm[:ip_addr].blank?
    || evm[:subnet_mask].blank? || evm[:gateway].blank?\n  \n  # Dynamically create
    the network string based on values from the dialog\n  if evm[:addr_mode].first
    == 'static'\n    network_string = \"network --onboot yes --bootproto=static --noipv6\"\n
    \   [\"ip\", :ip_addr, \"netmask\", :subnet_mask, \"gateway\", :gateway, \"hostname\",
    :hostname, \"nameserver\", :dns_servers].each_slice(2) do |ks_key, evm_key|\n
    \     network_string << \" --#{ks_key} #{evm[evm_key]}\" unless evm[evm_key].blank?\n
    \   end\n  else\n    network_string = \"network --onboot yes --bootproto=dhcp
    --noipv6\"\n    network_string << \" --#{\"hostname\"} #{evm[:hostname]}\" unless
    evm[:hostname].blank?\n  end\n%>\n##### <%= os_ver %> Kickstart file #####\n\n\n###
    Install info\ninstall\ntext\nlang en_US.UTF-8\nkeyboard us\nfirewall --service=ssh\nauthconfig
    --enableshadow --passalgo=sha512\nselinux --enforcing\ntimezone --utc America/New_York\nzerombr\npoweroff\n\n\n\n\n#
    Configure Networking based on values from provisioning dialog\n<%= network_string
    %>\n\nrootpw --iscrypted <%= MiqPassword.md5crypt(evm[:root_password]) %>\n\n#
    Source Files Location\nurl --url=<%= repo_source_url %>\nrepo --name=\"<%= os_ver
    %>\"  --baseurl=<%= repo_source_url %> --cost=100\n\n\n### Pre Install Scripts\n%pre\n#
    Get the first hard disk and use it for installation\nhd=/dev/`grep '[hsv]d[a-z]'
    /proc/partitions |sort |awk 'NR==1{print substr($4,0,4)}'`\necho 'clearpart --all
    --drives='$hd' --initlabel' >/tmp/partition\necho 'bootloader --location=mbr --driveorder='$hd'
    --append=\" rhgb crashkernel=auto quiet\"' >>/tmp/partition\necho 'part /boot
    --fstype=ext4 --size=500 --asprimary --ondrive='$hd >>/tmp/partition\necho 'part
    pv.008002 --grow --size=1' >>/tmp/partition\necho 'volgroup vg_rhtest --pesize=4096
    pv.008002' >>/tmp/partition\necho 'logvol / --fstype=ext4 --name=lv_root --vgname=vg_rhtest
    --grow --size=1024 --maxsize=51200' >>/tmp/partition\necho 'logvol swap --fstype=swap
    --name=lv_swap --vgname=vg_rhtest --grow --size=2016 --maxsize=4032' >>/tmp/partition\n%end\n\n\n###
    Grab the partitioning information that was written to disk earlier\n%include /tmp/partition\n\n\n###
    Post Install Scripts\n%post --log=/root/ks-post.log\n\n# Register to RHN or Download
    locally and Install RHEV Agent\n<% if rhn_activation_key.blank? %>\n  wget <%=
    rhev_agent_url %>\n  rpm -ivh rhev-agent-2.3.16-3.el6.x86_64.rpm\n<% else %>\n
    \ wget http://satellite.rdu.salab.redhat.com/pub/RHN-ORG-TRUSTED-SSL-CERT -O /usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT\n
    \ rhnreg_ks --serverUrl=https://satellite.rdu.salab.redhat.com/XMLRPC --sslCACert=/usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT
    --activationkey=<%= rhn_activation_key %> --force\n  yum -y install rhev-agent\n<%
    end %>\n\n# Register to Satellite and install the rhev-agent\n#wget -q <%= satellite_script
    %> -O /tmp/demo.sh\n#chmod +x /tmp/demo.sh\n#/tmp/demo.sh\n#yum -y install rhev-agent\n\n\n##
    Install First-Boot Script\necho \"#!/bin/bash\" > /tmp/miq-firstboot.sh\necho
    \"# Do Stuff Here\" >> /tmp/miq-firstboot.sh\necho \"# Clean up\" >> /tmp/miq-firstboot.sh\necho
    \"cp /etc/rc.local /tmp/miq-rc.local.tmp\" >> /tmp/miq-firstboot.sh\necho \"head
    -n -1 /tmp/miq-rc.local.tmp > /etc/rc.local\" >> /tmp/miq-firstboot.sh\necho \"chmod
    -x /tmp/miq-*\" >> /tmp/miq-firstboot.sh\n# Make the script executable\nchmod
    +x /tmp/miq-firstboot.sh\n# Install the script to run at boot\necho \"/tmp/miq-firstboot.sh\"
    >> /etc/rc.local\n## Done Installing MIQ First-Boot Script\n\n# Add a user called
    admin\ngroupadd admin\nuseradd -g admin -c \"Admin User\" -p '<%= MiqPassword.md5crypt(\"smartvm\")
    %>' -m admin\n\n# Dump of evm object to ks-post.log if debug is set true\n<%=
    evm.inspect if debug == true %>\n\n# Callback to EVM during post-install\nwget
    --no-check-certificate <%= evm[:callback_url_on_post_install] %>\n\n%end\n\n\n###
    Server Packages\n%packages\n@base\n@server-platform\n@server-policy\npax\noddjob\nsgpio\ncertmonger\npam_krb5\nkrb5-workstation\nperl-DBD-SQLite\n%end\n\n\n#####
    Done #####"
  pxe_image_type_id: 3
  type: CustomizationTemplateKickstart
  system: 
- name: rhel7_template_pxe
  description: ''
  script: "<%\n  # Setting Variables\n  debug                   = true\n  os_ver                  =
    \"RHEL 7.0 Server\"\n  rhn_activation_key      = \"2-rhel7\"\n  repo_source_url
    \        = \"http://satellite.rdu.salab.redhat.com/ks/dist/ks-rhel-x86_64-server-7-7.0\"\n
    \ satellite_script        = \"http://10.11.164.2/pub/cfme/demo7.sh\"\n  rhev_agent_url
    \         = \"http://satellite.rdu.salab.redhat.com/pub/cfme/ipxe/sources/misc/rhevm-guest-agent-common-1.0.9-9.el7ev.noarch.rpm\"\n
    \ root_fallback_password  = \"Redhat1!\" # Fallback root password if the dialog
    was blank\n  \n  # Account for some missing values\n  evm[:root_password]  = root_fallback_password
    if evm[:root_password].blank?\n  evm[:hostname]       = evm[:vm_target_hostname]
    if evm[:hostname].blank?\n  evm[:addr_mode]      = ['dhcp'] if evm[:ip_addr].blank?
    || evm[:subnet_mask].blank? || evm[:gateway].blank?\n  \n  # Dynamically create
    the network string based on values from the dialog\n  if evm[:addr_mode].first
    == 'static'\n    network_string = \"network --onboot yes --bootproto=static --noipv6\"\n
    \   [\"ip\", :ip_addr, \"netmask\", :subnet_mask, \"gateway\", :gateway, \"hostname\",
    :hostname, \"nameserver\", :dns_servers].each_slice(2) do |ks_key, evm_key|\n
    \     network_string << \" --#{ks_key} #{evm[evm_key]}\" unless evm[evm_key].blank?\n
    \   end\n  else\n    network_string = \"network --onboot yes --bootproto=dhcp
    --noipv6\"\n    network_string << \" --#{\"hostname\"} #{evm[:hostname]}\" unless
    evm[:hostname].blank?\n  end\n%>\n##### <%= os_ver %> Kickstart file #####\n\n\n###
    Install info\ninstall\nlang en_US.UTF-8\nkeyboard us\nfirewall --service=ssh\nauthconfig
    --enableshadow --passalgo=sha512\nselinux --enforcing\ntimezone --utc America/New_York\nzerombr\npoweroff\n\n\n\n\n#
    Configure Networking based on values from provisioning dialog\n<%= network_string
    %>\n\nrootpw --iscrypted <%= MiqPassword.md5crypt(evm[:root_password]) %>\n\n#
    Source Files Location\nurl --url=<%= repo_source_url %>\nrepo --name=\"<%= os_ver
    %>\"  --baseurl=<%= repo_source_url %> --cost=100\n\n\n### Pre Install Scripts\n%pre\n#
    Get the first hard disk and use it for installation\nhd=/dev/`grep '[hsv]d[a-z]'
    /proc/partitions |sort |awk 'NR==1{print substr($4,0,4)}'`\necho 'clearpart --all
    --drives='$hd' --initlabel' >/tmp/partition\necho 'bootloader --location=mbr --driveorder='$hd'
    --append=\" rhgb crashkernel=auto quiet\"' >>/tmp/partition\necho 'part /boot
    --fstype=xfs --size=500 --asprimary --ondrive='$hd >>/tmp/partition\necho 'part
    pv.008002 --grow --size=1' >>/tmp/partition\necho 'volgroup vg_rhtest --pesize=4096
    pv.008002' >>/tmp/partition\necho 'logvol / --fstype=xfs --name=lv_root --vgname=vg_rhtest
    --grow --size=1024 --maxsize=51200' >>/tmp/partition\necho 'logvol swap --fstype=swap
    --name=lv_swap --vgname=vg_rhtest --grow --size=2016 --maxsize=4032' >>/tmp/partition\n%end\n\n\n###
    Grab the partitioning information that was written to disk earlier\n%include /tmp/partition\n\n\n###
    Post Install Scripts\n%post --log=/root/ks-post.log\n\n# Register to RHN or Download
    locally and Install RHEV Agent\n<% if rhn_activation_key.blank? %>\n  wget <%=
    rhev_agent_url %>\n  rpm -ivh rhevm-guest-agent-common-1.0.9-9.el7ev.noarch.rpm\n<%
    else %>\n  rhnreg_ks --activationkey=<%= rhn_activation_key %> --force\n  yum
    -y install rhev-guest-agent-common\n<% end %>\n\n# Register to Satellite and install
    the rhev-agent\nwget -q <%= satellite_script %> -O /tmp/demo.sh\nchmod +x /tmp/demo.sh\n/tmp/demo.sh\nyum
    -y install rhev-guest-agent-common\n\n\n## Install First-Boot Script\necho \"#!/bin/bash\"
    > /tmp/miq-firstboot.sh\necho \"# Do Stuff Here\" >> /tmp/miq-firstboot.sh\necho
    \"# Clean up\" >> /tmp/miq-firstboot.sh\necho \"cp /etc/rc.local /tmp/miq-rc.local.tmp\"
    >> /tmp/miq-firstboot.sh\necho \"head -n -1 /tmp/miq-rc.local.tmp > /etc/rc.local\"
    >> /tmp/miq-firstboot.sh\necho \"chmod -x /tmp/miq-*\" >> /tmp/miq-firstboot.sh\n#
    Make the script executable\nchmod +x /tmp/miq-firstboot.sh\n# Install the script
    to run at boot\necho \"/tmp/miq-firstboot.sh\" >> /etc/rc.local\n## Done Installing
    MIQ First-Boot Script\n\n# Add a user called admin\ngroupadd admin\nuseradd -g
    admin -c \"Admin User\" -p '<%= MiqPassword.md5crypt(\"smartvm\") %>' -m admin\n\n#
    Dump of evm object to ks-post.log if debug is set true\n<%= evm.inspect if debug
    == true %>\n\n# Callback to EVM during post-install\nwget --no-check-certificate
    <%= evm[:callback_url_on_post_install] %>\n\n%end\n\n\n### Server Packages\n%packages\n@base\n@core\nqemu-guest-agent\ncertmonger\npam_krb5\nkrb5-workstation\nipa-client\nwget\nvim\ncurl\nscreen\nbash-completion\n%end\n\n%post\n#Allow
    all rhncfg-client actions \nrhn-actions-control --enable-all\n\n#Pull config files\nrhncfg-client
    get\n\n#Enable osad\nchkconfig osad on\n\n#Sync time & enable ntp\ntimedatectl
    set-ntp true\n#ntpdate 10.5.27.10\n#hwclock --systohc\n#chkconfig ntpd on\n\n#openscap
    packages\nyum -y install openscap openscap-content openscap-utils spacewalk-oscap\n%end\n\n#####
    Done #####"
  pxe_image_type_id: 7
  type: CustomizationTemplateKickstart
  system: 
- name: ansible_apache
  description: ''
  script: ''
  pxe_image_type_id: 9
  type: CustomizationTemplateCloudInit
  system: 
